<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xmlns:sharding="http://shardingjdbc.io/schema/shardingjdbc/sharding"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	 http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
         http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.1.xsd
http://shardingjdbc.io/schema/shardingjdbc/sharding
                        http://shardingjdbc.io/schema/shardingjdbc/sharding/sharding.xsd">
	<!--01.加载jdbc.properties文件-->
	<context:property-placeholder location="classpath:jdbc.properties"/>


	<!-- 配置固定扫描的包 -->
	<context:component-scan base-package="org.springmvc" />

	<!-- if you use annotation you must configure following setting -->
	<mvc:annotation-driven />

<!-- 配置视图解析器：如何把handler 方法返回值解析为实际的物理视图 【逻辑视图转换为物理视图】-->
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver"
		id="internalResourceViewResolver">

		<property name="prefix" value="/WEB-INF/views/" />

		<property name="suffix" value=".jsp" />

	</bean>
<bean id="messageSource"
	class="org.springframework.context.support.ResourceBundleMessageSource">
	<property name="basename" value="i18n"></property>
	</bean>



	<bean id="ds_0" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/shard_0" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>
	<bean id="ds_1" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		<property name="url" value="jdbc:mysql://localhost:3306/shard_1" />
		<property name="username" value="root" />
		<property name="password" value="root" />
	</bean>

	<!--<sharding:inline-strategy id="databaseStrategy" sharding-column="user_id" algorithm-expression="ds_${user_id % 2}" />-->
	<sharding:inline-strategy id="orderTableStrategy" sharding-column="order_id" algorithm-expression="t_order_${order_id % 2}" />
	<sharding:inline-strategy id="orderItemTableStrategy" sharding-column="order_id" algorithm-expression="t_order_item_${order_id % 2}" />

	<sharding:data-source id="shardingDataSource">
		<sharding:sharding-rule data-source-names="ds_0"><!--,ds_1-->
			<sharding:table-rules>
				<sharding:table-rule logic-table="t_order" actual-data-nodes="ds_${0}.t_order_${0..1}"  table-strategy-ref="orderTableStrategy" />
				<sharding:table-rule logic-table="t_order_item" actual-data-nodes="ds_${0}.t_order_item_${0..1}"  table-strategy-ref="orderItemTableStrategy" />
			</sharding:table-rules>
		</sharding:sharding-rule>
	</sharding:data-source>




	<!--&lt;!&ndash;03.配置dao  在StudentDaoImpl里要使用数据源&ndash;&gt;-->
	<!--<bean id="userDaoImpl" class="org.springmvc.dao.UserDaoImpl">-->
		<!--<property name="dataSource" ref="dataSource"/>-->
	<!--</bean>-->

	<!--&lt;!&ndash;04.配置service&ndash;&gt;-->
	<!--<bean id="userServiceImpl" class="org.springmvc.service.impl.UserServiceImpl">-->
		<!--<property name="dao" ref="userDaoImpl"/>-->
	<!--</bean>-->

	<!-- 引入同文件夹下的redis属性配置文件 -->
	<import resource="redis-config.xml"/>
</beans>